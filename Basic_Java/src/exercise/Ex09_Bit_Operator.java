package exercise;

/****************************************************************
	
	@author Jeongryeol Lee 
	@date	2018.07.12
	@classGoal
		1.	비트연산자 ( & , |, ^ )는 좌우의 논리값(true|false)이 아닌
			좌우의 숫추값을 2진수로 바꾸어 비교하는 연산자이다.
		2.	각각의 숫자를 2진수로 바꾸어서 자리수를 대조할때
			[ & ] 는 대조된 자리수가 모두 1이 되는 자리를 1으로, 그렇지 않으면 0으로 자리수룰 변경기록
			[ | ] 는 대조된 자리수 중 둘중 하나가 1이 되는 자리를 1로, 모두 0이 되는 자리를 0로 자리수를 변경기록
			[ ^ ] 는 대조된 자리수의 자리값이 서로 다를때 1, 같을때는 0을 반환함
		3.	조건문의 boolean 타입이 들어가야하는 조건식에는 비트연산자는 사용할 수 없다.
				비트연산자는 좌우의 수치값을 비트화 했을 때를 비교하는 연산자로,
				논리연산자의 &,|,&&,|| 과 다른 기능을 수행하기 때문이다.
		예시)
			4 & 6 = 4	    4 | 6 = 6	    4 ^ 6 = 2
		==============	==============	==============
		  4 :[1][0][0]	  4 :[1][0][0]	  4 :[1][0][0]
		  6 :[1][1][0]	  6 :[1][1][0]	  6 :[1][1][0]
			 ---------	   	 ---------	   	 ---------
		반환값 :[1][0][0]	반환값 :[1][1][0]	반환값 :[0][1][0]
	    100은 10진수일때 4임	110은 10진수일때 6임	 10은 10진수일때 2임	
		
******************************************************************/

public class Ex09_Bit_Operator {

	public static void main(String[] args) {
		
		int i = 1;
		int j = 10;
		do {
		    if( i>j )
		    break;
		     j--;
		}
		while( ++i < 5 );
		
		System.out.println(i&j);
		
	}
	
}
