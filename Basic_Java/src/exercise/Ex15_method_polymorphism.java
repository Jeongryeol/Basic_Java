package exercise;

/****************************************************************
	
	@author Jeongryeol Lee
	@date	2018.07.11
	@classGoal
		자바언어의 다형성(polymorphism,폴리모피즘)을 위한 개념
		메소드/생성자의 오버로딩/오버라이딩의 기본개념을 이해한다.
		
 *****************************************************************/

/*부모클래스*/
class Super{
    public float getNum(){return 3.0f;}
}

/*자식클래스*/
public class Ex15_method_polymorphism extends Super{
	//a.
	public float getNum(){return 4.f;}
	//오버라이딩 : 부모클래스의 메소드를, 같은 이름의 메소드로, 속성과 파라미터를 변화시키지 않은채, 리턴값을 새로 정의하는것

	//b.
	//public void getNum(){return 4.0f;}
	//메소드의 리턴타입을 void로 변경하는 오버라이딩을 구현할 경우, return이 없어야 함.(컴파일에러)

	//c.
	public void getNum(double d){};
	//오버로딩 : 부모클래스의 메소드를, 같은 이름의 메소드로, 속성을 변화시키기거나 추가하여, 이용하는 것

	//d.
	public double getNum(float d){return 4.0d;}
	//오버로딩 : 부모클래스의 메소드를, 같은 이름의 메소드로, 속성을 변화시키기거나 추가하여, 이용하는 것
}

/**************************************************************************
 * 
 * [핵심요약]
 * 	-자바는 같은 이름의 메소드를 여러개 가질 수 있다 : 메소드/생성자 오버로딩&오버라이딩
 * 	-공통점 : 메소드/생성자 이름만 같다.
 * 	-차이점 : 서로 역할이 다르다.
 * 
 * 
 * [개념정리]
 * 	Override (오버라이드) : 상위클래스가 가지고 있는 같은 이름의 메소드/생성자를 하위클래스에서 재정의하여 사용한다. 
 * 		
 * 		-상속관계에서만 가능함 ( @Override )
 * 		-부모클래스의 같은 이름의 메소드/생성자를 선언부를 모두 동일하게 받고, 기능{body}은 다시 정의함
 * 		-리턴타입까지 동일하게 받아야하고 리턴값을 변경하는 것은 가능 (왜냐하면 리턴값은 body에서 초기화되기때문)
 *
 * 	Overload (오버로드) : 같은 이름의 메소드/생성자를 매개변수의 변화로 복수정의하여 다른 기능을 동시에 구현하는 기술
 * 
 * 		-상속관계와는 상관이 없지만, 상속관계에 있는 상위클래스의 메소드/생성자도 오버로드 할 수 있다.
 * 		-기존에 있던 메소드/생성자에 대하여 같은 이름으로 매개변수(파라미터변수)의 개수와 타입, 순서가 다르게 정의
 * 		-이름만 같기때문에 리턴타입이 달라져도 된다.
 * 
 * 
 * [개념압축]
 *	이름이 같다는 공통점만 있고(이름이 바뀌면 새로 정의된 사용자정의메소드임)
 *	상속관계의 상위클래스에서 메소드/생성자를 그대로 가져와서 "몸통만 바꾸면" 오버라이드
 *	상속관계든 아니든 메소드/생성자를 "이름만 안바꾸면" 아무거나 바꾸면 오버로드 (리턴타입,파라미터,기능{body} 등)
 *	  
 * 
 **************************************************************************/